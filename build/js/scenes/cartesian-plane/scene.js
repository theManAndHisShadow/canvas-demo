(()=>{"use strict";let e=new class{constructor({title:e,ui:t,code:r}){this.displayName="Scene",this.title=e,this.uiTree=t,this.ui=null,this.code=r,this.timestamp=null}execute({root:e}){let t=this.code;e.children[0].textContent=this.title,t(e,this.ui.display,this.ui.states)}}({title:"Cartesian plane demo",ui:{description:{type:"display-infobox",label:"Description",text:"Cartesian coordinate system in a plane is a coordinate system that specifies each point uniquely by a pair of real numbers called coordinates, which are the signed distances to the point from two fixed perpendicular oriented lines, called coordinate lines or coordinate axes."},centerViewAction:{type:"button",text:"reset",label:"Center view"},selectedPreset:{type:"preset-dropdown-list",label:"Preset",selectedByDefault:0,options:[{name:"Single points",allowedElements:["*"]},{name:"Segments",allowedElements:["*"]},{name:"Line",allowedElements:["*"]},{name:"Quadratic parabola",allowedElements:["*"]},{name:"Cubic parabola",allowedElements:["*"]},{name:"Hyperbola",allowedElements:["*"]},{name:"Exponential curve",allowedElements:["*"]}]}},code:(e,t,r)=>{window.runningAnimations.clearQueue();const n=Date.now();let h=resetElement(e.querySelector("canvas"),`canvas-${n}`);h.width=600,h.height=400;const a=h.getContext("2d"),d=new o({renderer:a,cx:300,cy:200,gridCellSize:10,gridLineColor:"rgba(35, 35, 35, 0.35)",gridLineThickness:1,axisColor:"white",fillColor:"black"});d.render();let c=!1,p={x:0,y:0},x={x:0,y:0};h.addEventListener("mousemove",(e=>{if(c){let t=getMousePos(h,e);x={x:t.x-p.x,y:t.y-p.y},p=t,d.move(x,1),d.render()}})),h.addEventListener("mousedown",(e=>{c=!0;let t=getMousePos(h,e);p={x:t.x,y:t.y},h.style.cursor="grab",setTimeout((()=>{h.style.cursor="grabbing"}),120)})),h.addEventListener("mouseup",(()=>{c=!1,h.style.cursor="inherit"}));let b="";d.addEventListener("redraw",(()=>{b=`\n                <br/> \n                - x-axis - [${d.visibleArea.x}], <br/> \n                - y-axis - [${d.visibleArea.y[0]-2}, ${d.visibleArea.y[1]}].\n            `,t.isExist("visibleArea")&&t.updateValue("visibleArea",b)})),r.subscribe(((e,r,n)=>{if("centerViewAction"==e&&(d.moveToOrigin(),d.render()),"selectedPreset"==e){if(d.moveToOrigin(),d.clearContent(),t.removeDynamicllyRendered(),0==r)[new i("O",0,0,"white"),new i("A",2,2,getColor("orange"),getColor("red")),new i("B",-2,2,getColor("lime"),getColor("green")),new i("C",-2,-2,getColor("purple"),getColor("deepPurple")),new i("D",2,-2,getColor("blue"),getColor("indigo"))].forEach((e=>{d.add(e),t.dynamicRender(`point${e.label}`,{type:"display-item",label:`- point <span style="font-weight: bold">${e.label}</span>`,text:`<i style="font-size: 15px">(${e.planeX}, ${e.planeY})</i>`})}));else if(1==r){const e=1;[new i("O",0,0,"white"),new s(["A",-5.5,2],["B",-1.5,2],"#ff0000",e),new s(["B",-1.5,2],["C",0,6],"#ff7f00",e),new s(["C",0,6],["D",1.5,2],"#ffff00",e),new s(["D",1.5,2],["E",5.5,2],"#7fff00",e),new s(["E",5.5,2],["F",2,0],"cyan",e),new s(["F",2,0],["G",3.5,-4],"#007fff",e),new s(["G",3.5,-4],["H",0,-2],"blue",e),new s(["H",0,-2],["I",-3.5,-4],"indigo",e),new s(["I",-3.5,-4],["J",-2,0],"magenta",e),new s(["J",-2,0],["A",-5.5,2],"crimson",e)].forEach((e=>{d.add(e),"Point"==e.constructor.name?t.dynamicRender(`point${e.label}`,{type:"display-item",label:`- point <span style="font-weight: bold">${e.label}</span>`,text:`<i style="font-size: 15px">(${e.planeX}, ${e.planeY})</i>`}):"Segment"==e.constructor.name&&t.dynamicRender(`segment${e.startPoint.label+e.endPoint.label}`,{type:"display-item",label:`- segment <span style="font-weight: bold; color: black; text-shadow: 0px 0px 3px  ${e.color}; border-radius: 3px;"> ${e.startPoint.label}${e.endPoint.label}</span>`,text:`[ <i style="font-size: 15px">(${e.startPoint.planeX}, ${e.startPoint.planeY}), (${e.endPoint.planeX}, ${e.endPoint.planeY})</i> ]`})}))}else if(r>=2&&r<=6){const e=r-2,i=[[new l("x",getColor("red")),new l("-x",getColor("orange")),new l("{1/3}x",getColor("green")),new l("{-1/3}x",getColor("blue")),new l("3x",getColor("indigo")),new l("-3x",getColor("purple"))],[new l("x^2",getColor("red")),new l("-x^2",getColor("purple")),new l("1/10x^2",getColor("green")),new l("-1/10x^2",getColor("cyan")),new l("0.25x^2-5",getColor("orange")),new l("-0.25x^2+5",getColor("indigo"))],[new l("1/100x^3",getColor("red")),new l("-1/100x^3",getColor("blue")),new l("x^3+3x^2-6",getColor("amber")),new l("-x^3-3x^2+6",getColor("purple"))],[new l("1/x",getColor("red")),new l("-1/x",getColor("purple")),new l("2/x",getColor("amber")),new l("-2/x",getColor("teal")),new l("3/x",getColor("green")),new l("-3/x",getColor("cyan"))],[new l("e^x",getColor("red")),new l("e^{5/10x}",getColor("amber")),new l("e^{3/10x}",getColor("yellow")),new l("e^{2/10x}",getColor("green")),new l("e^1/10x",getColor("blue")),new l("-e^1/10x",getColor("deepPurple"))]];console.log(i[e]),t.dynamicRender("visibleArea",{type:"display-item",label:"Current visible area",text:b}),t.dynamicRender("spacer",{type:"display-spacer"}),t.dynamicRender("function-list-title",{type:"display-item",label:"Function graphs drawn",text:i[e].length}),i[e].forEach(((e,r)=>{var i;d.add(e),t.dynamicRender("function-formula-"+r,{type:"display-float-tile",hideColon:!0,label:(i=e.color,`\n<span style="\n    background: ${changeColorOpacity(i,.75)}; \n    border: 2px solid ${i}; \n    border-radius: 100%;\n    right: 2px;\n    width: 8px;\n    display: block;\n    position: relative;\n    height: 8px;\n"></span>`),text:`Æ’(x) = ${t.renderFormula(e.formula)};`})}))}d.render()}})),r.setState("selectedPreset",0)}});window.exportedObjects.push(e);class t{constructor(){this.events={}}addEventListener(e,t){this.events[e]||(this.events[e]=[]),this.target=this,this.events[e].push(t)}dispatchEvent(e,t){this.events[e]&&this.events[e].forEach((e=>e(t)))}}class r{constructor(e){this.renderer=e||null,this.parent=null}}class i extends r{constructor(e,t,r,i,s="white"){super(),this.x=t,this.y=r,this.planeX=null,this.planeY=null,this.color=i,this.label=e,this.labelColor=s}draw(){this.label&&this.label.length>0&&drawText(this.renderer,{x:this.x+7,y:this.y-7,text:this.label,color:this.labelColor}),drawCircle(this.renderer,{cx:this.x,cy:this.y,fillColor:this.color,borderColor:this.color,r:2})}}class s extends r{constructor(e,t,r,s=2){super(),this.startPoint=new i(e[0],e[1],e[2],r),this.endPoint=new i(t[0],t[1],t[2],r),this.color=r,this.thickness=s,this.length=getDistanseBetweenTwoPoint(e[1],e[2],t[1],t[2])}draw(){drawLine(this.renderer,{x1:this.startPoint.x,y1:this.startPoint.y,x2:this.endPoint.x,y2:this.endPoint.y,thickness:this.thickness,color:this.startPoint.color}),this.startPoint.draw(),this.endPoint.draw()}}class n{constructor(){}detect(e){let t="unknown";return t=/x\^3/g.test(e)?"cubic":/x\^2/g.test(e)?"quadratic":/e\^\{?\-?(\d+\/?\d+|0\.\d{1,})?x\}?/g.test(e)?"exponential":/\/\d?x/g.test(e)?"hyperbolic":"linear",t}parse(e,t){let r={};const i=new RegExp("(?<!{)([+-])+","gm");let s=e.split(i);const n=e=>(e=/(\{|\})/gm.test(e)?e.replace(/(\{|\})/gm,""):e,/\//g.test(e)?Number(fractionToDecimal(e).toFixed(5)):e);if("linear"==t){let e=0,t=0;s.forEach(((r,l)=>{if(r.trim().length>0&&!i.test(r)){let i=l>0&&"-"===s[l-1]?-1:1;/x/.test(r)?(e=r.split("x")[0]||1,e=n(e)*i):t=n(r)*i}})),r={a:e,b:t}}else if("hyperbolic"==t){let e=0,t=0,i=0;s.forEach(((r,l)=>{if(r.trim().length>0&&!/[+-]/.test(r)){let o=l>0&&"-"===s[l-1]?-1:1;/\/\d{0,}x/.test(r)?(e=Number(r.split("/")[0]||1),t=(r.split("/")[1]||1).replace("x",""),t=(""==t?1:Number(t))*o):i=n(r)*o}})),r={a:e,b:t,c:i}}else if("quadratic"==t){let e=0,t=0,i=0;s.forEach(((r,l)=>{if(r.trim().length>0&&!/[+-]/.test(r)){let o=l>0&&"-"===s[l-1]?-1:1;/x\^2/.test(r)?(e=r.split("x")[0]||1,e=n(e)*o):/x/.test(r)?(t=r.split("x")[0]||1,t=n(t)*o):i=n(r)*o}})),r={a:e,b:t,c:i}}else if("cubic"==t){let e=0,t=0,i=0,l=0;s.forEach(((r,o)=>{if(r.trim().length>0&&!/[+-]/.test(r)){let h=o>0&&"-"===s[o-1]?-1:1;/x\^3/.test(r)?(e=r.split("x")[0]||1,e=n(e)*h):/x\^2/.test(r)?(t=r.split("x")[0]||1,t=n(t)*h):/x/.test(r)?(i=r.split("x")[0]||1,i=n(i)*h):l=n(r)*h}})),r={a:e,b:t,c:i,d:l}}else if("exponential"==t){let e=0,t=0,l=0;s.forEach(((r,o)=>{if(r.trim().length>0&&!i.test(r))if(/e\^\{?/g.test(r)){let i=o>0&&"-"===s[o-1]?-1:1;e=r.split("e")[0]||1,e=n(e)*i;let l=r.split("e^")[1].split("x")[0].replace(/\{?/g,"")||1,h=!0===/\-/g.test(l)?-1:1;t="string"==typeof l?l.replace(/\-?/,""):l,t=(n(t)||1)*h}else{let e=o>0&&"-"===s[o-1]?-1:1;l=n(r)*e}})),r={a:e,b:t,c:l}}return r}findRoots(e,t){let r=[];if("linear"==e){let e=0,i=-1*t.b/t.a;r.push({x:i,y:e})}else if("quadratic"==e){const e=t.a,i=t.b,s=i**2-4*e*t.c;if(s>0){let t=(-i+Math.sqrt(s))/(2*e),n=(-i-Math.sqrt(s))/(2*e);r.push({x:t,y:0}),r.push({x:n,y:0})}else if(0===s){let t=-i/(2*e);r.push({x:t,y:0})}else{let t=-i/(2*e),n=Math.sqrt(-s)/(2*e);r.push({x:t,y:n}),r.push({x:t,y:-n})}}else if("cubic"==e){const e=t.a,i=t.b,s=t.c,n=(3*e*s-i**2)/(3*e**2),l=(2*i**3-9*e*i*s+27*e**2*t.d)/(27*e**3),o=l**2/4+n**3/27;if(o>0){const t=Math.cbrt(-l/2+Math.sqrt(o))+Math.cbrt(-l/2-Math.sqrt(o))-i/(3*e);r.push({x:t,y:0})}else if(0===o){const t=Math.cbrt(-l/2),s=2*t-i/(3*e),n=-t-i/(3*e);r.push({x:s,y:0}),r.push({x:n,y:0})}else{const t=Math.sqrt((-1*n)**3/27),s=Math.acos(-l/(2*t)),o=2*Math.cbrt(t)*Math.cos(s/3)-i/(3*e),h=2*Math.cbrt(t)*Math.cos((s+2*Math.PI)/3)-i/(3*e),a=2*Math.cbrt(t)*Math.cos((s+4*Math.PI)/3)-i/(3*e);r.push({x:o,y:0}),r.push({x:h,y:0}),r.push({x:a,y:0})}}else if("hyperbolic"==e);else if("exponential"==e){const{a:e,b:i,c:s}=t;if(0!==e&&-s/e>0){let t=Math.log(-s/e)/i;r.push({x:t,y:0})}}return r}}class l extends r{constructor(e=null,t="red"){super(),this.processor=new n,this.parent=null,this.formula=e,this.type=this.processor.detect(this.formula),this.parsed=this.processor.parse(this.formula,this.type),this.roots=this.processor.findRoots(this.type,this.parsed),this.color=t}#e(e=1){this.renderer.beginPath(),this.renderer.strokeStyle=this.color,this.renderer.lineWidth=1;let t,r,i=!0;for(let s=this.parent.visibleArea.x[0]-3;s<this.parent.visibleArea.x[1]+3;s+=e){let e=s,n=this.parsed.a*e+this.parsed.b,l=e*(2*this.parent.gridCellSize)+this.parent.subpixel,o=n*(2*this.parent.gridCellSize)+this.parent.subpixel,h={x:this.parent.cx+l,y:this.parent.cy-o};i?(this.renderer.moveTo(h.x,h.y),i=!1):this.renderer.lineTo(h.x,h.y),t=h.x,r=h.y}this.renderer.closePath(),this.renderer.stroke()}#t(e=1){this.renderer.beginPath(),this.renderer.strokeStyle=this.color,this.renderer.lineWidth=1;let t=!1;for(let r=this.parent.visibleArea.x[0]-3;r<this.parent.visibleArea.x[1]+3;r+=e){let e=r,i=this.parsed.a*e**2+this.parsed.b*e+this.parsed.c,s=e*(2*this.parent.gridCellSize)+this.parent.subpixel,n=i*(2*this.parent.gridCellSize)+this.parent.subpixel,l={x:this.parent.cx+s,y:this.parent.cy-n};l.x<0||l.x>this.parent.viewWidth?t&&(this.renderer.stroke(),this.renderer.closePath(),t=!1):t?this.renderer.lineTo(l.x,l.y):(this.renderer.beginPath(),this.renderer.moveTo(l.x,l.y),t=!0)}t&&(this.renderer.stroke(),this.renderer.closePath())}#r(e=1){this.renderer.beginPath(),this.renderer.strokeStyle=this.color,this.renderer.lineWidth=1;let t=!1;for(let r=this.parent.visibleArea.x[0]-3;r<this.parent.visibleArea.x[1]+3;r+=e){let e=r,i=this.parsed.a*e**3+this.parsed.b*e**2+this.parsed.c*e+this.parsed.d,s=e*(2*this.parent.gridCellSize)+this.parent.subpixel,n=i*(2*this.parent.gridCellSize)+this.parent.subpixel,l={x:this.parent.cx+s,y:this.parent.cy-n};l.x<0||l.x>this.parent.viewWidth?t&&(this.renderer.stroke(),this.renderer.closePath(),t=!1):t?this.renderer.lineTo(l.x,l.y):(this.renderer.beginPath(),this.renderer.moveTo(l.x,l.y),t=!0)}t&&(this.renderer.stroke(),this.renderer.closePath())}#i(e=1){this.renderer.beginPath(),this.renderer.strokeStyle=this.color,this.renderer.lineWidth=1;let t=!1;for(let r=this.parent.visibleArea.x[0]-3;r<this.parent.visibleArea.x[1]+3;r+=e){let e=r;if(Math.abs(e)<.001)continue;let i=this.parsed.a/(this.parsed.b*e)+this.parsed.c,s=e*(2*this.parent.gridCellSize)+this.parent.subpixel,n=i*(2*this.parent.gridCellSize)+this.parent.subpixel,l={x:this.parent.cx+s,y:this.parent.cy-n};l.x<0||l.x>this.parent.viewWidth?t&&(this.renderer.stroke(),this.renderer.closePath(),t=!1):t?this.renderer.lineTo(l.x,l.y):(this.renderer.beginPath(),this.renderer.moveTo(l.x,l.y),t=!0)}t&&(this.renderer.stroke(),this.renderer.closePath()),t=!1;for(let r=e;r<this.parent.visibleArea.x[1]+3;r+=e){let e=r,i=this.parsed.a/(this.parsed.b*e)+this.parsed.c,s=e*(2*this.parent.gridCellSize)+this.parent.subpixel,n=i*(2*this.parent.gridCellSize)+this.parent.subpixel,l={x:this.parent.cx+s,y:this.parent.cy-n};l.x<0||l.x>this.parent.viewWidth?t&&(this.renderer.stroke(),this.renderer.closePath(),t=!1):t?this.renderer.lineTo(l.x,l.y):(this.renderer.beginPath(),this.renderer.moveTo(l.x,l.y),t=!0)}t&&(this.renderer.stroke(),this.renderer.closePath())}#s(e=1){this.renderer.beginPath(),this.renderer.strokeStyle=this.color,this.renderer.lineWidth=1;let t=!1;for(let r=this.parent.visibleArea.x[0]-4;r<this.parent.visibleArea.x[1]+4;r+=e){let e=r,i=(this.parsed.a*Math.exp(this.parsed.b*e)+this.parsed.c)*(2*this.parent.gridCellSize)+this.parent.subpixel,s=e*(2*this.parent.gridCellSize)+this.parent.subpixel,n={x:this.parent.cx+s,y:this.parent.cy-i},l=5*this.parent.gridCellSize;n.x<0||n.x>this.parent.viewWidth||n.y<0-l||n.y>this.parent.viewHeight+l?t&&(this.renderer.stroke(),this.renderer.closePath(),t=!1):t?this.renderer.lineTo(n.x,n.y):(this.renderer.beginPath(),this.renderer.moveTo(n.x,n.y),t=!0)}t&&(this.renderer.stroke(),this.renderer.closePath())}draw(){"linear"==this.type&&this.#e(.1),"quadratic"==this.type&&this.#t(.1),"cubic"==this.type&&this.#r(.1),"hyperbolic"==this.type&&this.#i(.001),"exponential"==this.type&&this.#s(.075)}}class o extends t{#n=[];constructor({cx:e,cy:t,renderer:r,gridCellSize:i=10,gridLineColor:s="black",gridLineThickness:n=1,fillColor:l="white",axisColor:o="black"}){super(),this.cx=e,this.cy=t,this.globalOffset={x:0,y:0},this.visibleArea={x:[0,0],y:[0,0]},this.renderer=r,this.viewWidth=r.canvas.width,this.viewHeight=r.canvas.height,this.gridCellSize=i,this.gridLineColor=s,this.gridLineThickness=n,this.axisColor=o,this.fillColor=l,this.subpixel=.5}move(e,t=1){let r=Math.round(e.x*t),i=Math.round(e.y*t);this.cx=this.cx+r,this.cy=this.cy+i,this.globalOffset.x=this.globalOffset.x+r,this.globalOffset.y=this.globalOffset.y+i,this.#n.forEach((e=>{"Point"==e.constructor.name?(e.x=e.x+r,e.y=e.y+i):"Segment"==e.constructor.name?(e.startPoint.x=e.startPoint.x+r,e.startPoint.y=e.startPoint.y+i,e.endPoint.x=e.endPoint.x+r,e.endPoint.y=e.endPoint.y+i):e.constructor.name}))}moveToOrigin(){this.cx=this.viewWidth/2,this.cy=this.viewHeight/2,this.#n.forEach((e=>{"Point"==e.constructor.name?(e.x=e.x-this.globalOffset.x,e.y=e.y-this.globalOffset.y):"Segment"==e.constructor.name?(e.startPoint.x=e.startPoint.x-this.globalOffset.x,e.startPoint.y=e.startPoint.y-this.globalOffset.y,e.endPoint.x=e.endPoint.x-this.globalOffset.x,e.endPoint.y=e.endPoint.y-this.globalOffset.y):e.constructor.name})),this.globalOffset={x:0,y:0}}drawAxis(){this.renderer.strokeStyle=this.axisColor,this.renderer.lineWidth=1,this.renderer.beginPath(),this.renderer.moveTo(0,this.cy+this.subpixel),this.renderer.lineTo(this.viewWidth,this.cy+this.subpixel),this.renderer.stroke(),this.renderer.beginPath(),this.renderer.moveTo(this.cx+this.subpixel,0),this.renderer.lineTo(this.cx+this.subpixel,this.viewHeight),this.renderer.stroke(),this.renderer.closePath()}drawGrid(){const e=this.viewWidth,t=this.viewHeight,r=this.gridLineColor,i=r.split(", ").map((e=>Number(e.replace(/(\(|\)|rgba|rgb)/gm,"")))),s="rgba("+i.map(((e,t)=>3==t&&e<=1?i[t]+.45:e))+")";this.renderer.lineWidth=this.gridLineThickness;const n=(i,n)=>{if(this.renderer.beginPath(),this.renderer.strokeStyle=s,"column"===n){let e=i+2*this.gridCellSize+this.subpixel;this.renderer.moveTo(e,0),this.renderer.lineTo(e,t)}else if("row"===n){let t=i+this.subpixel;this.renderer.moveTo(0,t),this.renderer.lineTo(e,t)}this.renderer.stroke(),this.renderer.closePath(),this.renderer.beginPath(),this.renderer.strokeStyle=r;for(let r=3;r<=5;r++)if("column"===n){let e=i+this.gridCellSize*r+this.subpixel;this.renderer.moveTo(e,0),this.renderer.lineTo(e,t)}else if("row"===n){let t=i+this.gridCellSize*(r-2)+this.subpixel;this.renderer.moveTo(0,t),this.renderer.lineTo(e,t)}this.renderer.stroke(),this.renderer.closePath()},l=4*this.gridCellSize;let o=this.cx-e/2,h=Math.trunc(this.globalOffset.x/l),a=e/l-h;for(let e=-1-h;e<a;e++){let t=o+e*l,r=2*(e-7);n(t,"column"),drawText(this.renderer,{x:t+l/2,y:this.cy-10,text:0==r?"":r,fontSize:11}),e==-1-h&&(this.visibleArea.x[0]=r+2),e==a-1&&(this.visibleArea.x[1]=r)}let d=this.cy-t/2,c=Math.trunc(this.globalOffset.y/l),p=-1-c,x=t/l-c+1;for(let e=p;e<x;e++){let t=d+e*l,r=2*(e-5)*-1;n(t,"row"),drawText(this.renderer,{x:this.cx-7,y:0==r?t+12:t+1,text:r,fontSize:11,align:"right"}),e==p&&(this.visibleArea.y[0]=r-2),e==x-1&&(this.visibleArea.y[1]=r)}}add(e){e.renderer=this.renderer;const t=e=>{e.planeX=e.x,e.planeY=e.y;let t=this.cx+e.x*(2*this.gridCellSize)+this.globalOffset.x+this.subpixel,r=this.cy-e.y*(2*this.gridCellSize)+this.globalOffset.y+this.subpixel;e.x=t,e.y=r};"Point"==e.constructor.name?t(e):"Segment"==e.constructor.name?(e.startPoint.renderer=this.renderer,t(e.startPoint),e.endPoint.renderer=this.renderer,t(e.endPoint),e.parent=this):"Graph"==e.constructor.name&&(e.parent=this),this.#n.push(e)}clearContent(){this.#n=[],this.render()}fill(){drawRect(this.renderer,{x:0,y:0,width:this.viewWidth,height:this.viewHeight,fillColor:this.fillColor})}render(){this.fill(),this.drawGrid(),this.drawAxis(),this.#n.length>0&&this.#n.forEach((e=>{e.draw()})),this.dispatchEvent("redraw")}}})();