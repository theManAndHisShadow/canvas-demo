(()=>{"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(e,t){for(var i=0;i<t.length;i++){var r=t[i];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,n(r.key),r)}}function n(t){var n=function(t){if("object"!=e(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var i=n.call(t,"string");if("object"!=e(i))return i;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==e(n)?n:n+""}var i=new(function(){return e=function e(t){var n=t.title,i=t.ui,r=t.code;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.displayName="Scene",this.title=n,this.uiTree=i,this.ui=null,this.code=r,this.timestamp=null},(n=[{key:"execute",value:function(e){var t=e.root,n=this.code;t.children[0].textContent=this.title,n(t,this.ui.display,this.ui.states)}}])&&t(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,n}())({title:"Concentric circles",ui:{description:{type:"display-item-infobox",label:"Description",text:"A simple scene, training with rotating shapes and interacting with mouse events."},distance:{type:"display-item",label:" - distance to center"},angle:{type:"display-item",label:" - angle of view"},circlesAmount:{type:"input",label:"Circles",maxValue:55,defaultValue:5}},code:function(e,t,n){window.runningAnimations.clearQueue();var i=Date.now(),o=resetElement(e.querySelector("canvas"),"canvas-".concat(i));o.width=600,o.height=400;var a=o.getContext("2d"),l=300,c=200,s={x:!1,y:!1},u=null;window.runningAnimations.add((function(){var e=n.getState("circlesAmount");a.clearRect(0,0,600,400),drawGrid(a,{cellSize:10,lineThickness:1,lineColor:"rgba(0, 0, 0, 0.0032)"});for(var t=0;t<=e;t++){var i=150-150/e*t,y=l-s.x,d=c-s.y,f=150/e,p=2e-4*r(u,o.height/2),h=f*(t/e),b=l-y*h*p,m=c-d*h*p;drawCircle(a,{cx:b,cy:m,r:i,borderThickness:2,borderColor:"#4A235A",fillColor:"#7D3C98"}),t===e-1&&drawCircle(a,{cx:b,cy:m,r:5,borderThickness:2,borderColor:"#4A235A",fillColor:"#4A235A"}),t===e-1&&s.x&&s.y&&(drawLine(a,{x1:b,y1:m,x2:s.x,y2:s.y,color:"rgba(0, 0, 0, 0.5)",thickness:1}),drawLine(a,{x1:150,y1:200,x2:s.x,y2:s.y,color:"rgba(0, 0, 0, 0.5)",thickness:1}),drawLine(a,{x1:450,y1:200,x2:s.x,y2:s.y,color:"rgba(0, 0, 0, 0.5)",thickness:1}),drawLine(a,{x1:300,y1:350,x2:s.x,y2:s.y,color:"rgba(0, 0, 0, 0.5)",thickness:1}),drawLine(a,{x1:300,y1:50,x2:s.x,y2:s.y,color:"rgba(0, 0, 0, 0.5)",thickness:1}))}})),e.addEventListener("mousemove",(function(e){s=getMousePos(o,e),u=Math.round(getDistanseBetweenTwoPoint(s.x,s.y,l,c)),t.updateValue("distance",u+" px."),t.updateValue("angle",Math.round(getAngleBetweenTwoPoints(l,c,s.x,s.y))+" Â°")}))}});function r(e,t){return e>=t?100:Math.round(100*e/t)}window.exportedObjects.push(i)})();