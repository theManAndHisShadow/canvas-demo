(()=>{"use strict";let e=new class{constructor({title:e,ui:t,code:r}){this.displayName="Scene",this.title=e,this.uiTree=t,this.ui=null,this.code=r,this.timestamp=null}execute({root:e}){let t=this.code;e.children[0].textContent=this.title,t(e,this.ui.display,this.ui.states)}}({title:"Binary search",ui:{description:{type:"display-infobox",label:"Description",text:"This is a clear demonstration of the difference in search speed between brute-force and binary search methods. The brute-force method involves a complete traversal of the entire dataset, but it does not require the dataset to be sorted. In contrast, binary search quickly finds the target value, even in a enormnous dataset, but it requires the dataset to be sorted."},attemps:{type:"display-item",label:"Attempts"},"current-search-range":{type:"display-item",label:"Current search range"},status:{type:"display-item",label:"Status"},givenNumber:{type:"input",label:"Choose number",text:"",minValue:1,defaultValue:getRandomNumber(1,100),maxValue:1e3},range:{type:"option-selector",label:"Select range",optionNames:["1-100","1-1000"],defaultValue:0},searchMethod:{type:"option-selector",label:"Search method",optionNames:["Binary seach","Brute force"],defaultValue:0},find:{type:"main-action-button",text:"Find number",blockControlDuringExecution:!0}},code:(e,t,s)=>{window.runningAnimations.clearQueue();const o=Date.now();let n=resetElement(e.querySelector("canvas"),`canvas-${o}`);n.width=600,n.height=400;const h=n.getContext("2d");let a=null;s.getState("gridObject")?(a=s.getState("gridObject"),a.renderer=h,a.source="loaded",console.log("loaded instance from storage",a)):(a=new r({cx:301,cy:200.5,renderer:h}),s.setState("gridObject",a),console.log("created new instance",a));let l="not-started";s.subscribe(((e,r,i)=>{let o=s.getState("givenNumber"),n=s.getState("range"),h=s.getState("searchMethod"),c=0,d=()=>{a.update({cellSize:0==n?30:10,margin:0==n?3:1,columns:0==n?10:40,rows:0==n?10:25,hideNumbers:0!=n})};"range"==e&&"in-progress"!==l&&d(),"find"==e&&("in-progress"!==l?(d(),async function({array:e,givenNumber:t,onTry:r,onSuccess:i,onFail:s,stepDelay:o=500,method:n="binary"}){r=r||function(){},i=i||function(){},s=s||function(){};let h=0,a=e.length-1,l=0;function c(e){return new Promise((t=>setTimeout(t,e)))}if("bruteforce"===n)for(;h<=a;){if(await c(0==l?0:o),r(h,a),l+=1,e[h]===t)return i(h),h;h+=1}else{if("binary"!==n)throw new Error(`Unknown method: ${n}`);for(;h<=a;){await c(0==l?0:o);let s=Math.floor((h+a)/2);if(r(h,a),l+=1,e[s]<t)h=s+1;else if(e[s]>t)a=s-1;else if(e[s]===t)return i(s),s}}s()}({method:1==h?"bruteforce":"binary",array:a.items.map((e=>e.number)),givenNumber:o,stepDelay:1e3,onTry:(e,r)=>{c+=1,l="in-progress",s.setState("find__status",l),t.updateValue("attemps",c),t.updateValue("current-search-range",`[${e+1}, ${r+1}]`),t.updateValue("status",'<span class="yellow-word-bubble">In progress...</span>'),a.items.forEach((t=>{t.number>=e+1&&t.number<=r+1||t.check()}))},onSuccess:e=>{l="done",s.setState("find__status",l),t.updateValue("attemps",c),t.updateValue("status",'<span class="green-word-bubble">Success!</span>'),a.items[e].paintItGreen()},onFail:()=>{l="failed",s.setState("find__status",l),t.updateValue("attemps",c),t.updateValue("status",'<span class="red-word-bubble">Failed!</span>')}})):console.log("cant start, already in-progress"))}));let c=new i({text:"Loading scene from memory...",fontSize:12,duration:2e3,renderer:h});window.runningAnimations.add((()=>{h.clearRect(0,0,600,400),drawRect(h,{x:0,y:0,width:600,height:400,fillColor:getColor("black",.85)}),a.render(),"loaded"==a.source&&c.opacity>0&&c.render()}))}});window.exportedObjects.push(e);class t{constructor({number:e,size:t,x:r,y:i,margin:s,fillColor:o=getColor("black"),hideNumbers:n,textColor:h=getColor("white"),parent:a}){this.number=e,this.size=t,this.x=r,this.y=i,this.margin=s,this.fillColor=o,this.textColor=h,this.hideNumbers=n,this.parent=a,this.checked=!1}check(){this.checked=!0,this.fillColor=changeColorOpacity(this.fillColor,.1),this.textColor=changeColorOpacity(this.textColor,.1)}uncheck(){this.checked=!1,this.fillColor=getColor("black",1),this.textColor=getColor("white",1)}paintItGreen(){this.fillColor=getColor("green"),this.textColor=getColor("white")}render(){drawRect(this.parent.renderer,{x:this.x,y:this.y,width:this.size,height:this.size,fillColor:this.fillColor}),0==this.hideNumbers?drawText(this.parent.renderer,{x:this.x+this.size/2,y:this.y+this.size/2,fontSize:this.number>=100?11:13,text:this.number,color:this.textColor}):1!=this.hideNumbers||1!=this.number&&1e3!=this.number?drawRect(this.parent.renderer,{x:this.x+this.size/2,y:this.y+this.size/2,width:1,height:1,fillColor:this.textColor}):drawText(this.parent.renderer,{x:this.x+this.size/2,y:this.y+this.size/2+.5,fontSize:8,text:1==this.number?1:"1k",color:this.textColor})}}class r{constructor({cx:e,cy:t,columns:r=10,rows:i=10,cellSize:s=30,margin:o=3,renderer:n,hideNumbers:h=!1}={}){this.cx=e,this.cy=t,this.columns=r,this.rows=i,this.cellSize=s,this.margin=o,this.width=null,this.height=null,this.startX=null,this.startY=null,this.hideNumbers=h,this.renderer=n,this.items=[],this.#e(),this.createdAt=Date.now(),this.source="created"}#e(){const e=this.margin+this.cellSize,r=this.cx-e*this.columns/2,i=this.cy-e*this.rows/2,s=[];let o=1;for(let n=0;n<this.rows;n++)for(let h=0;h<this.columns;h++){let a=r+h*e,l=i+n*e,c=new t({parent:this,size:this.cellSize,margin:this.margin,number:o,x:a,y:l,hideNumbers:this.hideNumbers});o++,s.push(c)}this.items=s,this.width=this.columns*e,this.height=this.rows*e,this.startX=r,this.startY=i}update({rows:e,columns:t,margin:r,cellSize:i,hideNumbers:s}){for(let e in arguments[0])arguments[0].hasOwnProperty(e)&&(this[e]=arguments[0][e]);this.#e()}drawScale({padding:e=10}){const t=.5,r="rgba(255, 255, 255, 1)";this.renderer.beginPath(),this.renderer.strokeStyle=r,this.renderer.lineWidth=1;let i=this.startY-e+t;this.renderer.moveTo(this.startX-e+t,i),this.renderer.lineTo(this.startX+this.width+t,i);let s=this.startX-e+t;this.renderer.moveTo(s,i),this.renderer.lineTo(s,this.startY+this.height+t),this.renderer.closePath(),this.renderer.stroke(),this.renderer.beginPath();for(let s=1;s<=this.columns;s++){let o=this.startX+(s-1)*(this.margin+this.cellSize)+this.cellSize/2+t;1!=s&&s%5!=0||drawText(this.renderer,{x:o,y:this.startY-e-10,text:s,color:r,fontSize:8}),this.renderer.moveTo(o,i),this.renderer.lineTo(o,i-3)}for(let i=1;i<=this.rows;i++){let o=this.startY+(i-1)*(this.margin+this.cellSize)+this.cellSize/2+t;1!=i&&i%5!=0||drawText(this.renderer,{x:this.startX-e-10,y:o,text:i,color:r,fontSize:8}),this.renderer.moveTo(s,o),this.renderer.lineTo(s-3,o)}this.renderer.closePath(),this.renderer.stroke()}render(){this.items.forEach((e=>{e.render()})),this.items.length>100&&this.drawScale({padding:10})}}class i{constructor({text:e,duration:t=1e3,opacity:r=1,fontSize:i,textColor:s="white",backgroundColor:o="black",renderer:n}){this.text=e,this.duration=t,this.backgroundColor=o,this.textColor=s,this.fontSize=i,this.opacity=r,this.renderer=n;const h=(0-r)/(t/1e3*60);this.step=h}render(){this.opacity+=this.opacity>=0&&this.opacity<=1?this.step:0,drawRect(this.renderer,{x:0,y:0,width:this.renderer.canvas.width,height:this.renderer.canvas.height,fillColor:getColor(this.backgroundColor,this.opacity)}),this.text&&"string"==typeof this.text&&this.text.length>0&&drawText(this.renderer,{x:this.renderer.canvas.width/2,y:this.renderer.canvas.height/2,text:this.text,color:getColor(this.textColor,this.opacity),fontSize:this.fontSize})}}})();